// Code generated by MockGen. DO NOT EDIT.
// Source: selector.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockselector is a mock of selector interface
type Mockselector struct {
	ctrl     *gomock.Controller
	recorder *MockselectorMockRecorder
}

// MockselectorMockRecorder is the mock recorder for Mockselector
type MockselectorMockRecorder struct {
	mock *Mockselector
}

// NewMockselector creates a new mock instance
func NewMockselector(ctrl *gomock.Controller) *Mockselector {
	mock := &Mockselector{ctrl: ctrl}
	mock.recorder = &MockselectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockselector) EXPECT() *MockselectorMockRecorder {
	return m.recorder
}

// TellMe mocks base method
func (m *Mockselector) TellMe(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TellMe", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// TellMe indicates an expected call of TellMe
func (mr *MockselectorMockRecorder) TellMe(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TellMe", reflect.TypeOf((*Mockselector)(nil).TellMe), arg0)
}
